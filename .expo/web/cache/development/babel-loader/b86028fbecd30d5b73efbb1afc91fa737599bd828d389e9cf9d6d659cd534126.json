{"ast":null,"code":"import * as React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LibrariesScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/JungleBg.gif\"),\n    style: styles.backgroundImage,\n    children: _jsx(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsxs(View, {\n          style: styles.buttonContainer,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleCreatedButtonPress();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Created\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return handleFavoriteButtonPress();\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Favorite\"\n            })\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'center'\n  },\n  scrollContainer: {\n    flexGrow: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    marginTop: 10\n  },\n  button: {\n    backgroundColor: '#2978A0',\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    borderRadius: 5,\n    marginHorizontal: 50\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","ImageBackground","ScrollView","StyleSheet","Text","TextInput","TouchableOpacity","View","jsx","_jsx","jsxs","_jsxs","LibrariesScreen","_ref","navigation","source","require","style","styles","backgroundImage","children","contentContainerStyle","scrollContainer","container","buttonContainer","button","onPress","handleCreatedButtonPress","buttonText","handleFavoriteButtonPress","create","flex","resizeMode","justifyContent","flexGrow","backgroundColor","alignItems","padding","flexDirection","marginTop","paddingVertical","paddingHorizontal","borderRadius","marginHorizontal","color","fontSize","fontWeight"],"sources":["C:/Users/Mark/learningrn/navigation/screens/LibrariesScreen.js"],"sourcesContent":["import * as React from 'react';\r\nimport { ImageBackground, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\r\n\r\nexport default function LibrariesScreen({ navigation }) {\r\n    return (\r\n        <ImageBackground source={require('../assets/JungleBg.gif')} style={styles.backgroundImage}>\r\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n                <View style={styles.container}>\r\n                    <View style={styles.buttonContainer}>\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleCreatedButtonPress()}>\r\n                            <Text style={styles.buttonText}>Created</Text>\r\n                        </TouchableOpacity>\r\n\r\n                        <TouchableOpacity style={styles.button} onPress={() => handleFavoriteButtonPress()}>\r\n                            <Text style={styles.buttonText}>Favorite</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </ScrollView>\r\n        </ImageBackground>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    backgroundImage:{\r\n        flex: 1,\r\n        resizeMode: 'cover', // or 'stretch' or 'contain'\r\n        justifyContent: 'center',\r\n    },\r\n    scrollContainer:{\r\n        flexGrow: 1,\r\n        backgroundColor: 'rgba(0, 0, 0, 0)', // Set the background color to transparent\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'flex-start',\r\n        padding: 20,\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        marginTop: 10, \r\n    },\r\n    button: {\r\n        backgroundColor: '#2978A0',\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 30,\r\n        borderRadius: 5,\r\n        marginHorizontal: 50,\r\n    },\r\n    buttonText: {\r\n        color: '#fff',\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG/B,eAAe,SAASC,eAAeA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChD,OACIL,IAAA,CAACR,eAAe;IAACc,MAAM,EAAEC,OAAO,yBAAyB,CAAE;IAACC,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAAAC,QAAA,EACtFX,IAAA,CAACP,UAAU;MAACmB,qBAAqB,EAAEH,MAAM,CAACI,eAAgB;MAAAF,QAAA,EACtDX,IAAA,CAACF,IAAI;QAACU,KAAK,EAAEC,MAAM,CAACK,SAAU;QAAAH,QAAA,EAC1BT,KAAA,CAACJ,IAAI;UAACU,KAAK,EAAEC,MAAM,CAACM,eAAgB;UAAAJ,QAAA,GAChCX,IAAA,CAACH,gBAAgB;YAACW,KAAK,EAAEC,MAAM,CAACO,MAAO;YAACC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMC,wBAAwB,CAAC,CAAC;YAAA,CAAC;YAAAP,QAAA,EAC9EX,IAAA,CAACL,IAAI;cAACa,KAAK,EAAEC,MAAM,CAACU,UAAW;cAAAR,QAAA,EAAC;YAAO,CAAM;UAAC,CAChC,CAAC,EAEnBX,IAAA,CAACH,gBAAgB;YAACW,KAAK,EAAEC,MAAM,CAACO,MAAO;YAACC,OAAO,EAAE,SAAAA,QAAA;cAAA,OAAMG,yBAAyB,CAAC,CAAC;YAAA,CAAC;YAAAT,QAAA,EAC/EX,IAAA,CAACL,IAAI;cAACa,KAAK,EAAEC,MAAM,CAACU,UAAW;cAAAR,QAAA,EAAC;YAAQ,CAAM;UAAC,CACjC,CAAC;QAAA,CACjB;MAAC,CACL;IAAC,CACC;EAAC,CACA,CAAC;AAE1B;AAEA,IAAMF,MAAM,GAAGf,UAAU,CAAC2B,MAAM,CAAC;EAC7BX,eAAe,EAAC;IACZY,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,OAAO;IACnBC,cAAc,EAAE;EACpB,CAAC;EACDX,eAAe,EAAC;IACZY,QAAQ,EAAE,CAAC;IACXC,eAAe,EAAE,kBAAkB;IACnCC,UAAU,EAAE,QAAQ;IACpBH,cAAc,EAAE;EACpB,CAAC;EACDV,SAAS,EAAE;IACPQ,IAAI,EAAE,CAAC;IACPK,UAAU,EAAE,YAAY;IACxBH,cAAc,EAAE,YAAY;IAC5BI,OAAO,EAAE;EACb,CAAC;EACDb,eAAe,EAAE;IACbc,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE;EACf,CAAC;EACDd,MAAM,EAAE;IACJU,eAAe,EAAE,SAAS;IAC1BK,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,CAAC;IACfC,gBAAgB,EAAE;EACtB,CAAC;EACDf,UAAU,EAAE;IACRgB,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}