{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Flashcard = function Flashcard(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    frontContent = _route$params.frontContent,\n    backContent = _route$params.backContent;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFlipped = _useState2[0],\n    setIsFlipped = _useState2[1];\n  var flipCard = function flipCard() {\n    setIsFlipped(!isFlipped);\n  };\n  return _jsx(TouchableOpacity, {\n    style: styles.flashcardContainer,\n    onPress: flipCard,\n    children: _jsx(View, {\n      style: styles.flashcard,\n      children: isFlipped ? _jsx(Text, {\n        style: styles.contentText,\n        children: backContent\n      }) : _jsx(Text, {\n        style: styles.contentText,\n        children: frontContent\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  flashcardContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  flashcard: {\n    width: 300,\n    height: 200,\n    backgroundColor: 'lightblue',\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 2,\n    elevation: 5\n  },\n  contentText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default Flashcard;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","jsx","_jsx","Flashcard","_ref","route","_route$params","params","frontContent","backContent","_useState","_useState2","_slicedToArray","isFlipped","setIsFlipped","flipCard","style","styles","flashcardContainer","onPress","children","flashcard","contentText","create","flex","alignItems","justifyContent","width","height","backgroundColor","borderRadius","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","textAlign"],"sources":["C:/Users/Mark/learningrn/navigation/code/flashcards.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nconst Flashcard = ({ route }) => {\r\n  const { frontContent, backContent } = route.params;\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  const flipCard = () => {\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity style={styles.flashcardContainer} onPress={flipCard}>\r\n      <View style={styles.flashcard}>\r\n        {isFlipped ? (\r\n          <Text style={styles.contentText}>{backContent}</Text>\r\n        ) : (\r\n          <Text style={styles.contentText}>{frontContent}</Text>\r\n        )}\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  flashcardContainer: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  flashcard: {\r\n    width: 300,\r\n    height: 200,\r\n    backgroundColor: 'lightblue',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    margin: 5, // Add margin to create space between flashcards\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.3,\r\n    shadowRadius: 2,\r\n    elevation: 5,\r\n  },\r\n  contentText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default Flashcard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGxC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAAkB;EAAA,IAAZC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACxB,IAAAC,aAAA,GAAsCD,KAAK,CAACE,MAAM;IAA1CC,YAAY,GAAAF,aAAA,CAAZE,YAAY;IAAEC,WAAW,GAAAH,aAAA,CAAXG,WAAW;EACjC,IAAAC,SAAA,GAAkCd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAE9B,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,OACEX,IAAA,CAACF,gBAAgB;IAACgB,KAAK,EAAEC,MAAM,CAACC,kBAAmB;IAACC,OAAO,EAAEJ,QAAS;IAAAK,QAAA,EACpElB,IAAA,CAACL,IAAI;MAACmB,KAAK,EAAEC,MAAM,CAACI,SAAU;MAAAD,QAAA,EAC3BP,SAAS,GACRX,IAAA,CAACJ,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAF,QAAA,EAAEX;MAAW,CAAO,CAAC,GAErDP,IAAA,CAACJ,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAF,QAAA,EAAEZ;MAAY,CAAO;IACtD,CACG;EAAC,CACS,CAAC;AAEvB,CAAC;AAED,IAAMS,MAAM,GAAGlB,UAAU,CAACwB,MAAM,CAAC;EAC/BL,kBAAkB,EAAE;IAClBM,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDL,SAAS,EAAE;IACTM,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,eAAe,EAAE,WAAW;IAC5BC,YAAY,EAAE,EAAE;IAChBL,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBK,MAAM,EAAE,CAAC;IACTC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;MAAEN,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IACrCM,aAAa,EAAE,GAAG;IAClBC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE;EACb,CAAC;EACDd,WAAW,EAAE;IACXe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAepC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}